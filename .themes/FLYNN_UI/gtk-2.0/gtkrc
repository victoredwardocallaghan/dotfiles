# FLYNN-UI - GTK2 theme/style for Gnome#
# krig - krig@tiscali.comit
include "menubar.rc"
include "scrollbar.rc"
#include "panel.rc"
#gtk-tooltip-timeout   = 1000 # Tooltips delay to 1 sec.
#gtk-menu-drop-shadow = 1
#default color scheme
gtk_color_scheme = "fg_color:#4CC0E1\nbg_color:#122E36\nbase_color:#005C69\ntext_color:#4CC0E1\nselected_bg_color:#255E6E\nselected_fg_color:#fff\ntooltip_bg_color:#FFE4C4\ntooltip_fg_color:#4CC0E1"
gtk-icon-sizes = "panel-menu=16,16:panel=18,18:gtk-button=20,20:gtk-large-toolbar=24,24:gtk-small-toolbar=20,20:gtk-menu=18,18"
style "theme-default"
{
  GtkButton::default_border = { 0, 0, 0, 0 }
  GtkButton::child-displacement-x = 0
  GtkButton::child-displacement-y = 0
  GtkWidget::focus-padding = 0
  GtkWidget::interior-focus = 0
#  GtkContainer::border-width = 4

  GtkRange::trough-border = 2
  GtkRange::slider-width = 16
  GtkRange::stepper-size = 16
#  GtkRange::activate-slider = 1
#  GtkRange:: trough-side-details = 1
  GtkRange:: trough-under-steppers = 1

  GtkScrollbar::min_slider_length = 16
  GtkScrollbar::has-backward-stepper = 0
  GtkScrollbar::has-secondary-backward-stepper = 1

  GtkPaned::handle_size  = 9

  GtkMenuBar::internal-padding  = 0
  GtkTreeView::expander_size    = 12 #15
  GtkExpander::expander_size    = 12 #17
  
  GtkScale::slider-length = 19
  GtkScale::slider-width  = 15
  GtkScale::trough-border = 0

  GtkWidget::link-color = "#0062dc" # blue
  GtkWidget::visited-link-color = "#8c00dc" #purple

  WnckTasklist::fade-overlay-rect = 0
  WnckTasklist::fade-loop-time = 5.0 # 5 seconds
  WnckTasklist::fade-opacity = 0.5 # final opacity

  #makes menu only overlap border
  GtkMenu::horizontal-offset = -2
  GtkMenu::vertical-offset = 2

  #removes extra padding at top and bottom of menus.  Makes menuitem overlap border
  GtkMenu::vertical-padding = 1
  GtkMenu::horizontal-padding = 1
  GtkNotebook::tab-overlap = 0

  GtkMenuItem   ::horizontal-padding   	= 3  
  GtkMenuItem   ::toggle-spacing   	= 5
  GtkMenuItem   ::arrow-spacing   	= 3
  #Spacing between edge with indicator and text
#  GtkOptionMenu  ::indicator-size = {11, 5}
  #GtkOptionMenu  ::indicator-spacing = {6, 5, 4, 4}

  GtkCheckButton ::indicator-size = 13
  GtkCheckButton ::indicator-spacing = 4
  GtkRadioButton ::indicator-size = 13
  GtkTreeView    ::allow-rules 	      = 0 # Don't use different color for odd rows
  GtkTreeView::horizontal_separator = 2
#  GtkTreeView::odd_row_color = "#D3E5FA" # mix(0.98, shade (0.98, @base_color), @selected_bg_color)
  GtkTreeView	::row_ending_details 	= 0
  GtkTreeView	::even_row_color 	= @bg_color # darker (@bg_color) # "#D3E5FA" # "#EDF3FE"
  GtkTreeView	::odd_row_color 	= @bg_color # darker (@bg_color) # "#D3E5FA" # "#EDF3FE"
#  GtkTreeView    ::row-ending-details   = 1
#  GtkTreeView    ::vertical-separator   = 1
  GtkScrolledWindow::scrollbar-spacing = 0 # distance in pixel between
  GtkScrolledWindow::scrollbars-within-bevel = 1 # scrollbar within window or not

##################################################

  GtkStatusbar	::shadow_type 	= GTK_SHADOW_ETCHED_OUT
#  GtkMenubar	::shadow_type 	= GTK_SHADOW_NONE
  GtkToolbar	::shadow_type 	= GTK_SHADOW_OUT
  GtkCList	::shadow_type	= GTK_SHADOW_NONE ##
  GtkFrame	::shadow_type 	= GTK_SHADOW_IN
  GtkScrolledWindow::shadow_type = GTK_SHADOW_IN
  GtkContainer	::shadow_type 	= GTK_SHADOW_ETCHED_IN #
  GtkBox	::shadow_type 	= GTK_SHADOW_OUT ##
  GtkPaned	::shadow_type 	= GTK_SHADOW_IN

###################################################

#  GtkAspectFrame::obey_child = 0 # it should allow the code line below here
  GtkAspectFrame::xalign = 1 # this should centered the frame label

  GtkToolbar::space_style = GTK_TOOLBAR_SPACE_EMPTY # EMPTY or LINE
  GtkAlignment::border-width = 4
#  GtkToggleToolButton::active = 1
#####  GtkToolbar::button-relief= GTK_RELIEF_NORMAL # uncomment for always draw buttons

  xthickness = 2
  ythickness = 1

  fg[NORMAL]       	=  @fg_color
  fg[ACTIVE]       	=  @fg_color
  fg[PRELIGHT]     	=  @fg_color
  fg[SELECTED]     	=  @selected_fg_color
  fg[INSENSITIVE]  	=  darker (@selected_bg_color) # mix (0.675, shade (0.95, @bg_color), @fg_color)

  bg_pixmap[NORMAL] 	= "Others/window-bg.png" 

  bg[NORMAL]       	=  @bg_color
  bg[ACTIVE]        	=  @bg_color
  bg[PRELIGHT]      	=  @bg_color
  bg[SELECTED]      	=  @selected_bg_color
  bg[INSENSITIVE]  	=  @bg_color

  base[NORMAL]     	=  @bg_color
  base[ACTIVE]     	=  shade (0.75, @bg_color)
  base[PRELIGHT]   	=  @base_color
  base[SELECTED]     	=  @selected_bg_color
  base[INSENSITIVE]	=  @bg_color

  text[NORMAL]     	=  @text_color
  text[ACTIVE]      	=  shade (0.95, @base_color)
  text[PRELIGHT]   	=  @text_color
  text[SELECTED]   	=  @selected_fg_color
  text[INSENSITIVE]	=  darker (@selected_bg_color) # mix (0.675, shade (0.95, @bg_color), @fg_color)

  engine "pixmap"
  { 
# handles
    image
    {
      	function	= HANDLE
      	recolorable	= TRUE
      	file		= "Others/divider-h.png"
      	border		= { 1, 1, 1, 1 }
      	stretch 	= TRUE
      	overlay_file	= "Handles/handle-h.png"
      	overlay_stretch	= FALSE
      	orientation	= HORIZONTAL
    }
    image
    {
      	function	= HANDLE
      	recolorable	= TRUE
      	file		= "Others/divider-v.png"
      	border		= { 1, 1, 1, 1 }
      	stretch 	= TRUE
      	overlay_file	= "Handles/handle-v.png"
      	overlay_stretch	= FALSE
      	orientation	= VERTICAL
    }
# shadows
    image
    {
      function		= SHADOW
      shadow		= IN
      recolorable	= TRUE
      file		= "Shadows/shadow-in.png"
      border		= { 2, 2, 2, 2 }
      stretch		= TRUE
    }
    image
    {
       function		= SHADOW
       shadow		= OUT
       recolorable	= TRUE
       file		= "Shadows/shadow-out.png"
      border		= { 2, 2, 2, 2 }
       stretch		= TRUE
    }
    image
    {
       function		= SHADOW
       shadow		= ETCHED_IN
       recolorable	= TRUE
       file		= "Shadows/shadow-etched-in.png"				
      border		= { 2, 2, 2, 2 }
       stretch		= TRUE
    }
    image
    {
       function		= SHADOW
       shadow		= ETCHED_OUT
       recolorable	= TRUE
       file		= "Shadows/shadow-etched-out.png"
      border		= { 2, 2, 2, 2 }
       stretch		= TRUE
    }
    image
    {
       function		= SHADOW
       shadow		= NONE
       recolorable	= TRUE
       file		= "Shadows/shadow-none.png"
      border		= { 0, 0, 0, 0 }
       stretch		= TRUE
    }
# shadow gaps
    image
    {
       function		= SHADOW_GAP
       recolorable	= TRUE
       file		= "Frame-Gap/shadow-gap.png"
       border		= { 2, 2, 3, 2 }
       stretch		= TRUE
       gap_start_file	= "Frame-Gap/frame-gap-start.png"
       gap_start_border	= { 3, 0, 3, 0 }
       gap_end_file	= "Frame-Gap/frame-gap-end.png"
       gap_end_border	= { 0, 3, 3, 0 }
       gap_side		= TOP
    }
# focus
    image
    {
      function		= FOCUS
      recolorable	= TRUE
      file		= "Others/focus.png" # transparent image is better?
      border		= { 1, 1, 1, 1 }
      stretch		= TRUE
    }	
# tooltip
   
# arrows
    image
    {
      function		= ARROW
      recolorable	= TRUE
      overlay_file	= "Arrows/arrow-up.png"
      overlay_border	= { 0, 0, 0, 0 }
      overlay_stretch	= FALSE
      arrow_direction	= UP
    }
    image
    {
      function		= ARROW
      state		= NORMAL
      recolorable	= TRUE
      overlay_file	= "Arrows/arrow-down.png"
      overlay_border	= { 0, 0, 0, 0 }
      overlay_stretch	= FALSE
      arrow_direction	= DOWN
    }
    image
    {
      function		= ARROW
      state		= PRELIGHT
      recolorable	= TRUE
      overlay_file	= "Arrows/arrow-down-prelight.png"
      overlay_border	= { 0, 0, 0, 0 }
      overlay_stretch	= FALSE
      arrow_direction	= DOWN
    }
    image
    {
      function		= ARROW
      state		= ACTIVE
      recolorable	= TRUE
      overlay_file	= "Arrows/arrow-down-active.png"
      overlay_border	= { 0, 0, 0, 0 }
      overlay_stretch	= FALSE
      arrow_direction	= DOWN
    }
    image
    {
      function		= ARROW
      state		= INSENSITIVE
      recolorable	= TRUE
      overlay_file	= "Arrows/arrow-down-insensitive.png"
      overlay_border	= { 0, 0, 0, 0 }
      overlay_stretch	= FALSE
      arrow_direction	= DOWN
    }
    image
    {
      function		= ARROW
      recolorable	= TRUE
      overlay_file	= "Arrows/arrow-left.png"
      overlay_border	= { 0, 0, 0, 0 }
      overlay_stretch	= FALSE
      arrow_direction	= LEFT
    }
    image
    {
      function		= ARROW
      state		= INSENSITIVE
      recolorable	= TRUE
      overlay_file	= "Arrows/arrow-left-insensitive.png"
      overlay_border	= { 0, 0, 0, 0 }
      overlay_stretch	= FALSE
      arrow_direction	= LEFT
    }
    image
    {
      function		= ARROW
      recolorable	= TRUE
      overlay_file	= "Arrows/arrow-right.png"
      overlay_border	= { 0, 0, 0, 0 }
      overlay_stretch	= FALSE
      arrow_direction	= RIGHT
    }
    image
    {
      function		= ARROW
      state		= INSENSITIVE
      recolorable	= TRUE
      overlay_file	= "Arrows/arrow-right-insensitive.png"
      overlay_border	= { 0, 0, 0, 0 }
      overlay_stretch	= FALSE
      arrow_direction	= RIGHT
    }
    image # used for dialog bg. in apps. like Inkscape 
    {
     function		= BOX
     recolorable	= TRUE
     file        	= "Others/null-2.png"
     border      	= { 2, 2, 2, 2 }
     stretch         	= TRUE
     }     
#    resize grip
     image
     {
	 function	= RESIZE_GRIP
	 detail		= "statusbar"
	 recolorable	= TRUE
	 overlay_file	= "Handles/resize-grip.png"
	 overlay_border	= { 0, 0, 0, 0 }
	 overlay_stretch= FALSE
     }     
#    lines          
     image
     {
	 function	= VLINE
	 recolorable	= TRUE
	 file		= "Lines/line-v.png"
	 border		= { 0, 0, 0, 0 }
	 stretch	= TRUE
     }
     image
     {
	 function	= HLINE
	 recolorable	= TRUE
	 file		= "Lines/line-h.png"
	 border		= { 0,0,0,0 }
	 stretch	= TRUE
     }
#   entry
    image
    {
      function		= BOX
      recolorable	= TRUE
      shadow		= IN
      state		= NORMAL
      file		= "Shadows/entry-in.png"
      border		= { 1, 1, 1, 1 }
      stretch		= TRUE
    }
    image
    {
      function		= BOX
      recolorable	= TRUE
      shadow		= OUT
      state		= NORMAL
      file		= "Shadows/text-entry.png"
      border		= { 1, 1, 1, 1 }
      stretch		= TRUE
    }	
    image
    {
      function		= SHADOW
      detail		= "entry"
      shadow		= IN
      recolorable	= FALSE
      file		= "Shadows/text-entry.png"
      border		= { 1, 1, 1, 1 }
      stretch		= TRUE
    }
    image
    {
      function		= SHADOW
      detail		= "entry"
      shadow		= OUT
      recolorable	= FALSE
      file		= "Shadows/text-entry-out.png"
      border		= { 1, 1, 1, 1 }
      stretch		= TRUE
    }
#   paned widget   
    image 
    {
	function	= BOX
	recolorable	= TRUE
	detail		= "paned"
	file		= "Buttons/paned.png"
      border		= { 1, 1, 1, 1 }
	stretch		= TRUE
    }
#   handlebox   
    image 
    {
	function	= BOX
	recolorable	= TRUE
	detail		= "handlebox_bin"
	file		= "Buttons/paned.png"
      border		= { 1, 1, 1, 1 }
	stretch		= TRUE
    }
        image 
	{
            function        	= CHECK
            recolorable     	= TRUE
            state 		= NORMAL
            shadow          	= OUT
            overlay_file    	= "Check-Radio/check-normal.png"
            overlay_stretch 	= FALSE
        }
        image 
	{
            function        	= CHECK
            recolorable     	= TRUE
            state 		= PRELIGHT
            shadow          	= OUT
            overlay_file    	= "Check-Radio/check-normal-prelight.png"
            overlay_stretch 	= FALSE
        }
 	image 
	{
            function        	= CHECK
            recolorable     	= TRUE
            state 		= ACTIVE
            shadow          	= OUT
            overlay_file    	= "Check-Radio/check-active.png"
            overlay_stretch 	= FALSE
        }
 	image 
	{
            function        	= CHECK
            recolorable     	= TRUE
            state 		= SELECTED
            shadow          	= OUT
            overlay_file    	= "Check-Radio/check-normal.png"
            overlay_stretch 	= FALSE
        }
 	image 
	{
            function        	= CHECK
            recolorable     	= TRUE
            state 		= INSENSITIVE
            shadow          	= OUT
            overlay_file    	= "Check-Radio/check-off-inactive.png"
            overlay_stretch 	= FALSE
        }
 	image 
	{
            function        	= CHECK
            recolorable     	= TRUE
	    state 		= NORMAL
            shadow          	= IN
            overlay_file    	= "Check-Radio/check-active.png"
            overlay_stretch 	= FALSE
        }
 	image 
	{
            function        	= CHECK
            recolorable     	= TRUE
	    state 		= PRELIGHT
            shadow          	= IN
            overlay_file    	= "Check-Radio/check-active-prelight.png"
            overlay_stretch 	= FALSE
        }
    	image 
	{
            function        	= CHECK
            recolorable     	= TRUE
	    state 		= ACTIVE
            shadow          	= IN
            overlay_file    	= "Check-Radio/check-active.png"
            overlay_stretch 	= FALSE
        }
    	image 
	{
            function        	= CHECK
            recolorable     	= TRUE
	    state 		= SELECTED
            shadow          	= IN
            overlay_file    	= "Check-Radio/check-active.png"
            overlay_stretch 	= FALSE
        }
    	image 
    	{
    	    function        	= CHECK
    	    recolorable     	= TRUE
       	    state 		= INSENSITIVE
       	    shadow          	= IN
       	    overlay_file   	= "Check-Radio/check-on-inactive.png"
       	    overlay_stretch 	= FALSE
    	}
        image 
	{
            function        	= OPTION
            recolorable    	= TRUE
            state 		= NORMAL
            shadow          	= OUT
            overlay_file    	= "Check-Radio/radio-normal.png"
            overlay_stretch 	= FALSE
        }
        image 
	{
            function        	= OPTION
            recolorable    	= TRUE
            state 		= PRELIGHT
            shadow          	= OUT
            overlay_file    	= "Check-Radio/radio-normal-prelight.png"
            overlay_stretch 	= FALSE
        }
        image 
	{
            function        	= OPTION
            recolorable     	= TRUE
            state 		= ACTIVE
            shadow          	= OUT
            overlay_file    	= "Check-Radio/radio-active.png"
            overlay_stretch 	= FALSE
        }
        image 
	{
            function        	= OPTION
            recolorable     	= TRUE
            state 		= SELECTED
            shadow          	= OUT
            overlay_file    	= "Check-Radio/radio-normal.png"
            overlay_stretch 	= FALSE
        }
 	image 
	{
            function        	= OPTION
            recolorable     	= TRUE
            state 		= INSENSITIVE
            shadow         	= OUT
            overlay_file    	= "Check-Radio/radio-off-inactive.png"
            overlay_stretch 	= FALSE
        }
 	image 
	{
            function        	= OPTION
            recolorable     	= TRUE
	    state 		= NORMAL
            shadow          	= IN
            overlay_file    	= "Check-Radio/radio-active.png"
            overlay_stretch 	= FALSE
        }
 	image 
	{
            function        	= OPTION
            recolorable     	= TRUE
	    state 		= PRELIGHT
            shadow          	= IN
            overlay_file    	= "Check-Radio/radio-active-prelight.png"
            overlay_stretch 	= FALSE
        }
 	image 
	{
            function        	= OPTION
            recolorable     	= TRUE
	    state 		= ACTIVE
            shadow          	= IN
            overlay_file    	= "Check-Radio/radio-active.png"
            overlay_stretch 	= FALSE
        }
 	image 
	{
            function        	= OPTION
            recolorable     	= TRUE
	    state 		= SELECTED
            shadow          	= IN
            overlay_file    	= "Check-Radio/radio-active.png"
            overlay_stretch 	= FALSE
        }
 	image 
	{
            function        	= OPTION
            recolorable     	= TRUE
	    state 		= INSENSITIVE
            shadow          	= IN
            overlay_file    	= "Check-Radio/radio-on-inactive.png"
            overlay_stretch 	= FALSE
        }
  }
}
#class "GtkRuler"       	style "theme-default"
class "GtkWidget"       	style "theme-default"
class "GtkSeparator"    	style "theme-default"
class "GtkStatusbar"		style "theme-default"
#class "GtkWindow"      		style "theme-default"
#####widget "PanelDItemEditor" 	style "theme-default"
class "GtkHandleBox"    	style "theme-default"
#widget_class "*HandleBox" 	style "theme-default"
#class "*HandleBox" 		style"theme-default"
#class "GtkMenu"    	style "theme-default"
class "GtkSeparator"    style "theme-default"
class "GtkFrame"    	style "theme-default"
class "GtkPaned"        style "theme-default"
class "GtkTooltip"       	style "theme-default"
widget_class "*.<GtkLabel>" style "theme-default"

#################### FRAME TITLE #####################

style "frame-title" = "theme-default"
{
#  GtkAspectFrame::obey_child = 0 # it should allow the code line below here
#  GtkAspectFrame::xalign = 0.5 # this should centered the frame label
#	font_name = "Bold"
	#####fg[NORMAL] = mix (0.95, shade (0.8, @selected_bg_color), "blue")
}

widget_class "*.<GtkFrame>.<GtkLabel>" style "frame-title"

#################### SEPARATOR #####################

style "separator" = "theme-default"
{
  xthickness    = 2
  ythickness    = 2
}

class "GtkSeparator"    	style "separator"

#################### BUTTONS #######################

style "button"	= "default"
{
  xthickness    = 2
  ythickness    = 0

  #GtkWidget::interior-focus = 0
  
  engine "pixmap"
  {
    image
    {
      function		= BOX
      detail		= "buttondefault"
      recolorable	= TRUE
      file		= "Buttons/button-overlay.png"
      border		= { 1, 0, 1, 0 }
      stretch		= FALSE
      overlay_file	= "Buttons/button-normal.png"
      overlay_border	= { 2, 2, 2, 2 }
      overlay_stretch	= TRUE
    }
    image
    {
      function		= BOX
      state		= PRELIGHT
      recolorable	= TRUE
      file		= "Buttons/button-overlay.png"
      border		= { 1, 0, 1, 0 }
      stretch		= FALSE
      overlay_file	= "Buttons/button-prelight.png"
      overlay_border	= { 2, 2, 2, 2 }
      overlay_stretch	= TRUE
    }
    image
    {
      function		= BOX
      state		= ACTIVE
      file		= "Buttons/button-overlay.png"
      border		= { 1, 0, 1, 0 }
      stretch		= FALSE
      overlay_file	= "Buttons/button-active.png"
      overlay_border	= { 2, 2, 2, 2 }
      overlay_stretch	= TRUE

    }
    image
    {
      function		= BOX
      recolorable	= TRUE
      file		= "Buttons/button-overlay.png"
      border		= { 1, 0, 1, 0 }
      stretch		= FALSE
      overlay_file	= "Buttons/button-normal.png"
      overlay_border	= { 2, 2, 2, 2 }
      overlay_stretch	= TRUE
    }	
    image 
    {
      function		= BOX
      state		= INSENSITIVE
      file		= "Buttons/button-insensitive.png"
      border		= { 1, 0, 1, 0 }
      stretch		= FALSE

    }
    image 
    {
      function		= BOX
      file		= "Buttons/button-overlay.png"
      border		= { 1, 0, 1, 0 }
      stretch		= FALSE
      overlay_file	= "Buttons/button-normal.png"
      overlay_border	= { 2, 2, 2, 2 }
      overlay_stretch	= TRUE
    }
	
  }
}

class "GtkButton" 	style "button"
class "*Font*"  	style "button"
#class "GtkToggleButton" style "button"

#class "GtkSpinButton"   style "button"
class "GtkCombo" style "button" # combo style applied
class "GtkComboBox" style "button" 
#class "GtkToolbar"    	style "button"
class "GtkToolButton"    	style "button"
#widget_class "*Text*" style "red"


########## combo ###################

style "combo" 
{
  xthickness   = 0
  ythickness   = 0
  
#  GtkWidget::interior_focus = 0
   
  engine "pixmap"
  { 
#    image
#    {
#      function		= FOCUS
#      recolorable	= TRUE
#      file		= "Shadows/text-entry.png"
#      border		= { 1, 1, 1, 1 }
#      stretch		= TRUE
#    }
    image
    {
      function		= SHADOW
      detail		= "entry"
      shadow		= IN
      recolorable	= FALSE
      file		= "Combo/text-entry.png"
      border		= { 1, 1, 1, 1 }
      stretch		= TRUE
    }
    image
    {
      function		= BOX
      recolorable	= TRUE
      state		= PRELIGHT
      file		= "Combo/combo-prelight.png"
      border		= { 1, 18, 4, 4}
      stretch		= TRUE
    }
    image
    {
      function		= BOX
      recolorable	= TRUE
      state		= NORMAL
      file		= "Combo/combo-normal.png"
      border		= { 1, 18, 4, 4}
      stretch		= TRUE
    }
    image
    {
      function		= BOX
      recolorable	= TRUE
      state		= ACTIVE
      file		= "Combo/combo-active.png"
      border		= { 1, 18, 4, 4}
      stretch		= TRUE
    }
    image
    {
      function		= BOX
      recolorable	= TRUE
      state		= SELECTED
      file		= "Combo/combo-active.png"
      border		= { 1, 18, 4, 4}
      stretch		= TRUE
    }
    image
    {
      function		= BOX
      recolorable	= TRUE
      state		= INSENSITIVE
      file		= "Combo/combo-insensitive.png"
      border		= { 1, 18, 4, 4}
      stretch		= TRUE
    }
    image
    {
      function		= TAB
      state		= INSENSITIVE
      recolorable	= TRUE
      overlay_file	= "Combo/arrow-insensitive.png"
      overlay_border	= { 0, 0, 0, 0 }
      overlay_stretch	= FALSE
    }
    image
    {
      function		= TAB
      recolorable	= TRUE
      state		= NORMAL
      overlay_file	= "Combo/arrow.png"
      overlay_border	= { 0, 0, 0, 0 }
      overlay_stretch	= FALSE
    }
    image
    {
      function		= TAB
      recolorable	= TRUE
      state		= PRELIGHT
      overlay_file	= "Combo/arrow-selected.png"
      overlay_border	= { 0, 0, 0, 0 }
      overlay_stretch	= FALSE
    }
    image
    {
      function		= TAB
      recolorable	= TRUE
      state		= SELECTED
      overlay_file	= "Combo/arrow-selected.png"
      overlay_border	= { 0, 0, 0, 0 }
      overlay_stretch	= FALSE
    }
    image
    {
      function		= TAB
      recolorable	= TRUE
      state		= ACTIVE
      overlay_file	= "Combo/arrow-selected.png"
      overlay_border	= { 0, 0, 0, 0 }
      overlay_stretch	= FALSE
    }
  }
}

class "Combo"	style "combo"
class "GtkOptionMenu" style "combo" # works; was combo style
class "GtkCombo" style "combo"
class "GtkComboBoxEntry" style "combo"
widget_class "GtkCombo.GtkButton" style "combo"
widget_class "GtkComboBoxEntry.GtkButton" style "combo"

################### MENU #################################

style "menu" = "theme-default" 
{
  xthickness	= 1
  ythickness	= 1

#  font_name = "11" # custom font size

   fg[NORMAL] 	= @base_color
   text[NORMAL] = @base_color
   fg[PRELIGHT] = @base_color
   text[PRELIGHT] = @base_color

   engine "pixmap"
   {
     image
     {
       function		= BOX
       recolorable    	= TRUE
       detail		= "menu"
       file		= "Menu/menu-bg.png"
       border		= { 2, 2, 2, 2 }
       stretch		=  TRUE
       #overlay_detail	= "menu_item"
       #overlay_file	= "Menu/item-bg.png"
       #overlay_stretch	= FALSE
     }
     image
     {
	 function	= HLINE
	 recolorable	= TRUE
	 file		= "Lines/line-h.png"
	 border		= { 0, 0, 0, 0 }
	 stretch	= TRUE
     }
   }
}
class "GtkMenu"		style "menu"
class "*GtkContainer*GtkMenu*" style "menu"
#widget_class "*GtkComboBox*.*GtkMenu*.*" style "menu"
class "GtkMenuBar"	style "menu"

##################################################

style "menu-item"	
{
  ythickness    = 2
#   fg[PRELIGHT] = @base_color
#   text[PRELIGHT] = @base_color  
  engine "pixmap"
  {
    image
    {
      function		= BOX
      recolorable	= TRUE
      file		= "Menu/item-bg.png"
      border		= { 2, 2, 2, 2 }
      stretch		= TRUE
    }
    image
    {
      function		= ARROW
      recolorable	= TRUE
      state		= NORMAL
      overlay_file	= "Menu/menu-item-arrow.png"
      overlay_stretch	= FALSE
      arrow_direction	= RIGHT
    }
    image
    {
      function		= ARROW
      recolorable	= TRUE
      state		= PRELIGHT
      overlay_file	= "Menu/menu-item-arrow-prelight.png"
      overlay_stretch	= FALSE
      arrow_direction	= RIGHT
    }	
  }
}
class "GtkMenuItem"    	style "menu-item"
widget_class "*<GtkMenuItem>*"          style "menu-item"
#widget_class "*<GtkSeparatorMenuItem>*" style "separator-menu-item" # NOT PRESENT

##################################################

style "menubar-item"	
{
  font_name = "Bold"
#  font_name = "Sans Bold Italic 12"
  xthickness	= 4
  ythickness	= 4

#  fg[NORMAL] = @text_color
#  fg[PRELIGHT] = @base_color
#  text[PRELIGHT] = @base_color
  
  engine "pixmap"
  {
    image
    {
      function		= BOX
      recolorable	= TRUE
      file		= "Menu/menubar-selected.png"
      border		= { 4, 4, 4, 4 }
      stretch		= TRUE
    }	
  }
}
widget_class "*GtkMenuBar*Item*"	style "menubar-item"

#########################################

style "menu-item-fix"
{
	fg[NORMAL] = @text_color
}

widget_class "*.<GtkItem>.<GtkLabel>" style "menu-item-fix"

#########################################

style "menubar-label-fix"
{
#	fg[NORMAL] = @base_color
}
widget_class "*.<GtkMenuBar>.<GtkItem>.<GtkLabel>" style "menubar-label-fix"

########### ENTRY  entry field settings here ##########################

style "theme-entry" = "theme-default"
{
  xthickness = 2
  ythickness = 2

  GtkWidget::interior_focus = 0

#  base[NORMAL]     	=  lighter (@tooltip_bg_color) # "#FFFFFF"
  #base[ACTIVE]     	=  darker (@bg_color) # mix (0.98, shade (0.98, @bg_color), @selected_bg_color) # shade (0.65,@base_color)
#  base[INSENSITIVE]	=  shade (1.25, @bg_color)

   engine "pixmap"
  {
# focus
    image
    {
      function		= FOCUS
      recolorable	= TRUE
      file		= "Shadows/entry-focus.png" # transparent image is better?
      border		= { 1, 1, 1, 1 }
      stretch		= TRUE
    }
    image
    {
      function		= SHADOW
      detail		= "entry"
      shadow		= IN
      recolorable	= TRUE
      file		= "Shadows/text-entry.png"
      border		= { 1, 1, 1, 1 }
      stretch		= TRUE
    }
  }	
}
class "GtkEntry" style "theme-entry"
widget_class "*Panel*GtkEntry*" style "theme-entry" # like for applet properties dialog

################ SPIN ENTRY ######################################

style "spin"  
{
  xthickness   = 0
  ythickness   = 2  
  #GtkWidget::interior_focus = 0
  #base[ACTIVE] = "#8593A6" 
  engine "pixmap"
  {	
    image
    {
      function		= SHADOW
      detail		= "entry"
      shadow		= IN
      recolorable	= TRUE
      file		= "Shadows/text-entry.png"
      border		= { 1, 1, 1, 1 }
      stretch		= TRUE
    }
  }
}
class "GtkSpin*" style "spin"
class "GtkSpinEntry*" style "spin"

################ SPIN BUTTON ######################################

style "spinbutton"    
{
  xthickness   = 3
  ythickness   = 1
#  GtkSpinButton::page-size = 0
  GtkWidget::interior_focus = 0
  engine "pixmap"
  {
    image
    {
      function		= ARROW
    }
# background - the same for all states
    image
    {
      function		= BOX
      state 		= NORMAL
      detail		= "spinbutton"
      recolorable	= TRUE
      file		= "Spin/spin-bg.png"
      border		= { 1, 1, 1, 1 }
      stretch		= TRUE
    }
# spin button - using overlay image only
#   up
    image
    {
      function		= BOX
      state 		= NORMAL
      detail		= "spinbutton_up"
      recolorable	= TRUE
      overlay_file	= "Spin/arrow-up.png"
      overlay_stretch	= FALSE
    }
    image
    {
      function		= BOX
      state 		= PRELIGHT
      detail		= "spinbutton_up"
      recolorable	= TRUE
      overlay_file	= "Spin/arrow-up.png"
      overlay_stretch	= FALSE
    }
    image
    {
      function		= BOX
      state 		= INSENSITIVE
      detail		= "spinbutton_up"
      recolorable	= TRUE
      overlay_file	= "Spin/arrow-up-disable.png"
      overlay_stretch	= FALSE
    }
    image
    {
      function		= BOX
      state 		= ACTIVE
      detail		= "spinbutton_up"
      recolorable	= TRUE
      overlay_file	= "Spin/arrow-up.png"
      overlay_stretch	= FALSE
    }    
#   down
    image
    {
      function		= BOX
      state 		= NORMAL
      detail		= "spinbutton_down"
      recolorable	= TRUE
      overlay_file	= "Spin/arrow-down.png"
      overlay_stretch	= FALSE
    }
    image
    {
      function		= BOX
      state 		= PRELIGHT
      detail		= "spinbutton_down"
      recolorable	= TRUE
      overlay_file	= "Spin/arrow-down.png"
      overlay_stretch	= FALSE
    }
    image
    {
      function		= BOX
      state 		= INSENSITIVE
      detail		= "spinbutton_down"
      recolorable	= TRUE
      overlay_file	= "Spin/arrow-down-disable.png"
      overlay_stretch	= FALSE
    }
    image
    {
      function		= BOX
      state 		= ACTIVE
      detail		= "spinbutton_down"
      recolorable	= TRUE
      #file		= "Spin/spin-transparent.png"
      #border		= { 5, 5, 5, 5 }
      #stretch		= TRUE
      overlay_file	= "Spin/arrow-down.png"
      overlay_stretch	= FALSE
    }
  }
}
class "GtkSpinButton"	style "spinbutton" ##

############### RADIO BUTTON ##################

style "radiobutton" = "theme-default"
{
#  xthickness   = 4
#  ythickness   = 2
  engine "pixmap" 
    {
# focus
    	image
    	{
      		function	= FOCUS
      		recolorable	= TRUE
      		file		= "Check-Radio/radio-focus.png" # transparent image is better?
      		border		= { 2, 2, 2, 2 }
      		stretch		= TRUE
    	}
        image 
	{
            function        	= OPTION
            recolorable    	= TRUE
            state 		= NORMAL
            shadow          	= OUT
            overlay_file    	= "Check-Radio/radio-normal.png"
            overlay_stretch 	= FALSE
        }
        image 
	{
            function        	= OPTION
            recolorable    	= TRUE
            state 		= PRELIGHT
            shadow          	= OUT
            overlay_file    	= "Check-Radio/radio-normal-prelight.png"
            overlay_stretch 	= FALSE
        }
        image 
	{
            function        	= OPTION
            recolorable     	= TRUE
            state 		= ACTIVE
            shadow          	= OUT
            overlay_file    	= "Check-Radio/radio-active.png"
            overlay_stretch 	= FALSE
        }
 	image 
	{
            function        	= OPTION
            recolorable     	= TRUE
            state 		= INSENSITIVE
            shadow         	= OUT
            overlay_file    	= "Check-Radio/radio-off-inactive.png"
            overlay_stretch 	= FALSE
        }
 	image 
	{
            function        	= OPTION
            recolorable     	= TRUE
	    state 		= NORMAL
            shadow          	= IN
            overlay_file    	= "Check-Radio/radio-active.png"
            overlay_stretch 	= FALSE
        }
 	image 
	{
            function        	= OPTION
            recolorable     	= TRUE
	    state 		= PRELIGHT
            shadow          	= IN
            overlay_file    	= "Check-Radio/radio-active-prelight.png"
            overlay_stretch 	= FALSE
        }
 	image 
	{
            function        	= OPTION
            recolorable     	= TRUE
	    state 		= ACTIVE
            shadow          	= IN
            overlay_file    	= "Check-Radio/radio-active.png"
            overlay_stretch 	= FALSE
        }
 	image 
	{
            function        	= OPTION
            recolorable     	= TRUE
	    state 		= INSENSITIVE
            shadow          	= IN
            overlay_file    	= "Check-Radio/radio-on-inactive.png"
            overlay_stretch 	= FALSE
        }
        image 
        {
      	    function        	= FLAT_BOX
      	    recolorable     	= TRUE
      	    stretch		= TRUE
      	    file            	= "Check-Radio/radio-focus.png"
      	    border          	= { 2, 2, 2, 2 }
    	}
    }
}
class "GtkRadioButton"	style "radiobutton"
class "GtkRadioMenuItem"style "radiobutton"

######### CHECK BUTTON #####################################

style "checkbutton"	= "theme-default"
{
  engine "pixmap" 
    {
# focus
    	image
    	{
      		function	= FOCUS
      		recolorable	= TRUE
      		file		= "Check-Radio/radio-focus.png" # transparent image is better?
      		border		= { 2, 2, 2, 2 }
      		stretch		= TRUE
    	}
        image 
	{
            function        	= CHECK
            recolorable     	= TRUE
            state 		= NORMAL
            shadow          	= OUT
            overlay_file    	= "Check-Radio/check-normal.png"
            overlay_stretch 	= FALSE
        }
        image 
	{
            function        	= CHECK
            recolorable     	= TRUE
            state 		= PRELIGHT
            shadow          	= OUT
            overlay_file    	= "Check-Radio/check-normal-prelight.png"
            overlay_stretch 	= FALSE
        }
 	image 
	{
            function        	= CHECK
            recolorable     	= TRUE
            state 		= ACTIVE
            shadow          	= OUT
            overlay_file    	= "Check-Radio/check-active.png"
            overlay_stretch 	= FALSE
        }
 	image 
	{
            function        	= CHECK
            recolorable     	= TRUE
            state 		= INSENSITIVE
            shadow          	= OUT
            overlay_file    	= "Check-Radio/check-off-inactive.png"
            overlay_stretch 	= FALSE
        }
 	image 
	{
            function        	= CHECK
            recolorable     	= TRUE
	    state 		= NORMAL
            shadow          	= IN
            overlay_file    	= "Check-Radio/check-active.png"
            overlay_stretch 	= FALSE
        }
 	image 
	{
            function        	= CHECK
            recolorable     	= TRUE
	    state 		= PRELIGHT
            shadow          	= IN
            overlay_file    	= "Check-Radio/check-active-prelight.png"
            overlay_stretch 	= FALSE
        }
    	image 
	{
            function        	= CHECK
            recolorable     	= TRUE
	    state 		= ACTIVE
            shadow          	= IN
            overlay_file    	= "Check-Radio/check-active.png"
            overlay_stretch 	= FALSE
        }
    	image 
    	{
    	    function        	= CHECK
    	    recolorable     	= TRUE
       	    state 		= INSENSITIVE
       	    shadow          	= IN
       	    overlay_file   	= "Check-Radio/check-on-inactive.png"
       	    overlay_stretch 	= FALSE
    	}
        image 
        {
            function        	= FLAT_BOX
            recolorable     	= TRUE
            stretch		= TRUE
            file            	= "Check-Radio/radio-focus.png"
            border          	= { 2, 2, 2, 2 }
        }

    }
}
class "GtkCheckButton"     style "checkbutton"
class "GtkCheckMenuItem"   style "checkbutton"

############# NOTEBOOK ####################

style "notebook" = "theme-default"
{
  GtkNotebook	::tab-overlap 	= 1
  GtkWidget::focus-padding = 0
#  font_name = "Bold"
#  font_name = "9" # custom tabs font size here
  xthickness   = 2
  ythickness   = 2
  fg[ACTIVE] 	=  @text_color
    
  engine "pixmap" 
    {
    image
    {
      function		= FOCUS
      recolorable	= TRUE
      file		= "Tabs/tab-focus.png"
	border		= { 1, 1, 1, 1 }
      stretch		= TRUE
    }
      image 
      {
        function	= EXTENSION
	recolorable	= TRUE
	state		= ACTIVE
	file		= "Tabs/tab-bottom.png"
	border		= { 1, 1, 0, 1 }
	stretch		= TRUE
	gap_side	= TOP
      }
      image 
      {
        function	= EXTENSION
	recolorable	= TRUE
	state		= ACTIVE
	file		= "Tabs/tab-top.png"
	border		= { 1, 1, 1, 0 }
	stretch		= TRUE
	gap_side	= BOTTOM
      }

      image 
      {
        function	= EXTENSION
	recolorable	= TRUE
	state		= ACTIVE
	file		= "Tabs/tab-left.png"
	border		= { 1, 0, 1, 1 }
	stretch		= TRUE
	gap_side	= RIGHT
      }
      image 
      {
        function	= EXTENSION
	recolorable	= TRUE
	state		= ACTIVE
	file		= "Tabs/tab-right.png"
	border		= { 0, 1, 1, 1 }
	stretch		= TRUE
	gap_side	= LEFT
      }	
      image 
      {
        function	= EXTENSION
	recolorable	= TRUE
	file		= "Tabs/tab-top-active.png"
	border		= { 1, 1, 3, 0 }
	stretch		= TRUE
	gap_side	= BOTTOM
      }
      image 
      {
        function	= EXTENSION
	recolorable	= TRUE
	file		= "Tabs/tab-bottom-active.png"
	border		= { 1, 1, 0, 3 }
	stretch		= TRUE
	gap_side	= TOP
      }
      image 
      {
        function	= EXTENSION
	recolorable	= TRUE
	file		= "Tabs/tab-left-active.png"
	border		= { 3, 0, 1, 1 }
	stretch		= TRUE
	gap_side	= RIGHT
      }
      image 
      {
        function	= EXTENSION
	recolorable	= TRUE
	file		= "Tabs/tab-right-active.png"
	border		= { 0, 3, 1, 1 }
	stretch		= TRUE
	gap_side	= LEFT
      }
# How to draw boxes with a gap on one side (ie the page of a notebook)
      image 
      {
        function	= BOX_GAP
	recolorable	= TRUE
	file		= "Tabs/notebook-top.png" 
	border		= { 1, 1, 2, 1 }
	stretch		= TRUE
	gap_file	= "Tabs/gap-top.png"
	gap_border     	= { 3, 3, 2, 0 }
	gap_start_file	= "Tabs/null.png"
	gap_start_border= { 0, 0, 0, 0 }
	gap_end_file	= "Tabs/null.png"
	gap_end_border	= { 0, 0, 0, 0 }
	gap_side	= TOP
      }
      image 
      {
        function	= BOX_GAP
	recolorable	= TRUE
	file		= "Tabs/notebook-bottom.png"
	border		= { 1, 1, 1, 2 }
	stretch		= TRUE
	gap_file	= "Tabs/gap-bottom.png"
	gap_border	= { 3, 3, 0, 2 }
	gap_start_file	= "Tabs/null.png"
	gap_start_border= { 0, 0, 0, 0 }
	gap_end_file	= "Tabs/null.png"
	gap_end_border	= { 0, 0, 0, 0 }
	gap_side	= BOTTOM
      }
      image 
      {
        function	= BOX_GAP
	recolorable	= TRUE
	file		= "Tabs/notebook-left.png"
	border		= { 2, 1, 1, 1 }
	stretch		= TRUE
	gap_file	= "Tabs/gap-left.png"
	gap_border	= { 2, 0, 3, 3 }
	gap_start_file	= "Tabs/null.png"
	gap_start_border= { 0, 0, 0, 0 }
	gap_end_file	= "Tabs/null.png"
	gap_end_border	= { 0, 0, 0, 0 }
	gap_side	= LEFT
      }
      image 
      {
        function	= BOX_GAP
	recolorable	= TRUE
	file		= "Tabs/notebook-right.png" 
	border		= { 1, 2, 1, 1 }
	stretch		= TRUE
	gap_file	= "Tabs/gap-right.png"
	gap_border	= { 0, 2, 3, 3 }
	gap_start_file	= "Tabs/null.png"
	gap_start_border= { 0, 0, 0, 0 }
	gap_end_file	= "Tabs/null.png"
	gap_end_border	= { 0, 0, 0, 0 }
	gap_side	= RIGHT
      }
# How to draw the box of a notebook when it isnt attached to a tab
      image 
      {
        function	= BOX
	recolorable	= TRUE
	file		= "Tabs/notebook.png"
	border		= { 1, 1, 1, 1 }
	stretch		= TRUE
      }
  }
}
class 	     "GtkNotebook"  			style "notebook"
widget_class "*<GtkNotebook>"    		style "notebook"
widget_class "*<GtkNotebook>*<GtkEventBox>" 	style "notebook"
widget_class "*<GtkNotebook>.GtkLabel*" 	style "notebook" # tabs label

############# PROGRESS BAR ##############################

style "progressbar"
{
  fg[PRELIGHT] = @base_color # active text color 
  xthickness = 1
  ythickness = 1
  engine "pixmap" 
  {
        image 
	{
            function        = BOX
            recolorable     = TRUE
            detail          = "bar"
            file            = "ProgressBar/progressbar-horiz.png"
            border          = { 1, 1, 1, 1 }
            stretch         = FALSE
            orientation     = HORIZONTAL
        }
        image 
	{
            function        = BOX
            recolorable     = TRUE
            detail          = "trough"
            file            = "ProgressBar/trough-progressbar-horiz.png"
            border          = { 2, 2, 2, 2 }
            stretch         = TRUE
            orientation     = HORIZONTAL
        }
        image 
	{
            function        = BOX
            recolorable     = TRUE
            detail          = "bar"
            file            = "ProgressBar/progressbar-vert.png"
            border          = { 2, 2, 2, 2 }
            stretch         = FALSE
            orientation     = VERTICAL
        }
        image 
	{
            function        = BOX
            recolorable     = TRUE
            detail          = "trough"
            file            = "ProgressBar/trough-progressbar-vert.png"
            border          = { 2, 2, 2, 2 }
            stretch         = TRUE
            orientation     = VERTICAL
        }
    }
}
widget_class 	"*ProgressBar*" 		style "progressbar"
class 		"GtkProgressBar"		style "progressbar"
class 		"GtkBar" 			style "progressbar"
widget_class 	"GtkWindow.GtkMenu.GtkCheckMenuItem.GtkHBox.GtkProgressBar"  style "progressbar"

############################# RANGE #######################

style "range" = "default"
{	
  engine "pixmap" 
  {
# trough 
    image 
    {
      function		= BOX
      recolorable	= TRUE
      detail		= "trough"
      file		= "Range/trough-horizontal.png"
      border		= { 5, 5, 5, 5 }
      stretch		= TRUE
      orientation	= HORIZONTAL
    }	
    image 
    {
      function		= BOX
      recolorable	= TRUE
      detail		= "trough"
      file		= "Range/trough-vertical.png"
      border		= { 5, 5, 5, 5 }
      stretch		= TRUE
      orientation	= VERTICAL
    }
# sliders
#   horizontal
    image 
    {
      function		= SLIDER
      recolorable	= TRUE
      state           	= NORMAL
      file		= "Range/null.png"
      border		= { 0, 0, 0, 0 }
      stretch		= TRUE
      overlay_file	= "Range/slider-horiz.png"
      overlay_stretch	= FALSE
      orientation	= HORIZONTAL
    }
    image 
    {
      function		= SLIDER
      recolorable	= TRUE
      state           	= PRELIGHT
      file		= "Range/null.png"
      border		= { 0, 0, 0, 0 }
      stretch		= TRUE
      overlay_file	= "Range/slider-horiz-prelight.png"
      overlay_stretch	= FALSE
      orientation	= HORIZONTAL
    }
    image 
    {
      function		= SLIDER
      recolorable	= TRUE
      state           	= INSENSITIVE
      file		= "Range/null.png"
      border		= { 0, 0, 0, 0 }
      stretch		= TRUE
      overlay_file	= "Range/slider-horiz-insensitive.png"
      overlay_stretch	= FALSE
      orientation	= HORIZONTAL
    }
#   vertical
    image 
    {
      function		= SLIDER
      recolorable	= TRUE
      state           	= NORMAL
      file		= "Range/null.png"
      border		= { 0, 0, 0, 0 }
      stretch		= TRUE
      overlay_file	= "Range/slider-vert.png"
      overlay_stretch	= FALSE
      orientation	= VERTICAL
    }
    image 
    {
      function		= SLIDER
      recolorable	= TRUE
     state           	= PRELIGHT
      file		= "Range/null.png"
      border		= { 0, 0, 0, 0 }
      stretch		= TRUE
      overlay_file	= "Range/slider-vert-prelight.png"
      overlay_stretch	= FALSE
      orientation	= VERTICAL
    }
    image 
    {
      function		= SLIDER
      recolorable	= TRUE
      state           	= INSENSITIVE
      file		= "Range/null.png"
      border		= { 0, 0, 0, 0 }
      stretch		= TRUE
      overlay_file	= "Range/slider-vert-insensitive.png"
      overlay_stretch	= FALSE
      orientation	= VERTICAL
    }
  }
}
class "GtkRange"	style "range"
#class "GtkScale"        style "range"

############### list ##################

style "list" = "theme-default"
{
  font_name = "Bold" # custom tab's font style
  GtkWidget::focus-padding = 0
  xthickness = 2
  ythickness = 2    

  fg[NORMAL]  	=  "#FFFFFF" # tab label color
##  fg[ACTIVE]    =  @selected_bg_color
#  fg[PRELIGHT] 	= "#FFFFFF"
  
  engine "pixmap"
  {
# focus
    image
    {
      	function	= FOCUS
      	recolorable	= TRUE
      	file		= "List/focus-tab.png" # transparent image is better?
      	border		= { 1, 1, 1, 1 }
      	stretch		= TRUE
    }   
    image
    {
      function		= BOX
      recolorable	= TRUE
      state		= ACTIVE
      file		= "List/tab-prelight.png"
      border		= { 4, 4, 4, 4 }
      stretch		= TRUE
    }
    image
    {
      function		= BOX
      recolorable	= TRUE
      state		= PRELIGHT
      file		= "List/tab-prelight.png"
      border		= { 4, 4, 4, 4 }
      stretch		= TRUE
    }
    image
    {
      function		= BOX
      recolorable	= TRUE
      state		= NORMAL
      file		= "List/tab-normal.png"
      border		= { 4, 4, 4, 4 }
      stretch		= TRUE
    }
    image
    {
      function		= BOX
      recolorable	= TRUE
      state		= INSENSITIVE
      file		= "List/tab-insensitive.png"
      border		= { 4, 4, 4, 4 }
      stretch		= TRUE
    }
# arrows for tab buttons
    image
    {
      function		= ARROW
      recolorable	= TRUE
      state		= NORMAL
      overlay_file	= "List/arrow-up.png"
      overlay_border	= { 0, 0, 0, 0 }
      overlay_stretch	= FALSE
      arrow_direction	= UP
    }
    image
    {
      function		= ARROW
      recolorable	= TRUE
      state		= PRELIGHT
      overlay_file	= "List/arrow-up-prelight.png"
      overlay_border	= { 0, 0, 0, 0 }
      overlay_stretch	= FALSE
      arrow_direction	= UP
    }
    image
    {
      function		= ARROW
      recolorable	= TRUE
      state		= ACTIVE
      overlay_file	= "List/arrow-up-prelight.png"
      overlay_border	= { 0, 0, 0, 0 }
      overlay_stretch	= FALSE
      arrow_direction	= UP
    }
    image
    {
      function		= ARROW
      state		= NORMAL
      recolorable	= TRUE
      overlay_file	= "List/arrow-down.png"
      overlay_border	= { 0, 0, 0, 0 }
      overlay_stretch	= FALSE
      arrow_direction	= DOWN
    }
    image
    {
      function		= ARROW
      state		= PRELIGHT
      recolorable	= TRUE
      overlay_file	= "List/arrow-down-prelight.png"
      overlay_border	= { 0, 0, 0, 0 }
      overlay_stretch	= FALSE
      arrow_direction	= DOWN
    }
    image
    {
      function		= ARROW
      state		= ACTIVE
      recolorable	= TRUE
      overlay_file	= "List/arrow-down-prelight.png"
      overlay_border	= { 0, 0, 0, 0 }
      overlay_stretch	= FALSE
      arrow_direction	= DOWN
    }
  }
}
widget_class "*<GtkTreeView>.<GtkButton>" 	style "list"
widget_class "*<GtkCTree>.<GtkButton>" 		style "list"
widget_class "*<GtkList>.<GtkButton>" 		style "list"
widget_class "*<GtkCList>.<GtkButton>" 		style "list"
widget_class "*.<GtkTreeView>.<GtkButton>*" 	style "list"
widget_class "*.ETree.*" 			style "list"
widget_class "*<GtkNotebook>*<GtkDrawingArea>" 	style "list"
widget_class "*<GtkNotebook>*<GtkLayout>" 	style "list"
widget_class "*<GtkNotebook>*<GtkViewport>" 	style "list"

# Treeview header
#widget_class "*.<GtkTreeView>.<GtkButton>" 		style "list"
#widget_class "*.<GtkCTree>.<GtkButton>"    		style "list"
#widget_class "*.<GtkList>.<GtkButton>"     		style "list"
#widget_class "*.<GtkCList>.<GtkButton>"    		style "list"

##########widget_class "*<GtkListItem>*" 			style "list"
# The same problem also exists for GtkCList and GtkCTree
# Only match GtkCList and not the parent widgets, because that would also change the headers.
widget_class "*<GtkCList>" 			style "list"

################# tree-view ################################

style "gtktreeview" = "list"
{
 font_name = "10" # most declare here, otherwise font tab settings displayed
# in this case is Bold font (from list style).
#  text[NORMAL]  =  @base_color # custom text color

  base[SELECTED]  =  @base_color
  base[ACTIVE]  =  @selected_fg_color # lighter (@bg_color)
  base[INSENSITIVE]  =  @bg_color
  text[SELECTED]  =  @text_color
  text[ACTIVE]  =  darker (@bg_color)
  fg[NORMAL]  	=  @fg_color # for label of progressbar embedded
    engine "pixmap" 
    {
# focus
    	image
    	{
      		function	= FOCUS
      		recolorable	= TRUE
      		file		= "List/focus-item.png" # transparent image is better?
      		border		= { 2, 2, 2, 2 }
      		stretch		= TRUE
    	}
	image
     	{
        	function        = BOX
		recolorable     = TRUE
		shadow          = OUT
		state		= NORMAL
		file            = "ProgressBar/progress.png"
		border          = { 3, 3, 3, 3 }
		stretch         = FALSE
	}
   	image
	{
       		function        = BOX
		recolorable     = TRUE
		state		= PRELIGHT
		file            = "ProgressBar/progress.png"
		border          = { 3, 3, 3, 3 }
		stretch         = FALSE
	}
	image
      	{
	       	function       	= BOX
		recolorable     = TRUE
		state		= ACTIVE
		file		= "ProgressBar/progress.png"
		border          = { 3, 3, 3, 3 }
		stretch         = FALSE
	}
	image
 	{
       		function        = BOX
 		recolorable     = TRUE
		state		= SELECTED
		file		= "ProgressBar/progress.png"
		border          = { 3, 3, 3, 3 }
		stretch         = FALSE
   	}
	image
 	{
       		function        = FLAT_BOX
 		recolorable     = TRUE
		state		= NORMAL
      		file		= "List/list-item-normal.png"
      		border		= { 1, 1, 1, 1 }
      		stretch		= TRUE
   	}
	image
 	{
       		function        = FLAT_BOX
 		recolorable     = TRUE
		state		= SELECTED
      		file		= "List/list-item-selected.png"
      		border		= { 1, 1, 1, 1 }
      		stretch		= TRUE
   	}
	image
 	{
       		function        = FLAT_BOX
 		recolorable     = TRUE
		state		= ACTIVE
      		file		= "List/list-item-active.png"
      		border		= { 1, 1, 1, 1 }
      		stretch		= TRUE
   	}
	image
 	{
       		function        = FLAT_BOX
 		recolorable     = TRUE
		state		= INSENSITIVE
      		file		= "List/list-item-insensitive.png"
      		border		= { 1, 1, 1, 1 }
      		stretch		= TRUE
   	}
    image 
    {
      function        	= FLAT_BOX
      recolorable     	= TRUE
      stretch		= TRUE
      file            	= "Check-Radio/radio-focus.png"
      border          	= { 2, 2, 2, 2 }
    }
    image
    {
	function        = FLAT_BOX
	state           = SELECTED
	detail		= "cell_odd_start"
	border          = { 2, 0, 2, 2 }
	file            = "List/cell-start.png"
	stretch		= TRUE
    }
    image
    {
	function        = FLAT_BOX
	state           = SELECTED
	detail		= "cell_odd_middle"
	border          = { 0, 0, 2, 2 }
	file            = "List/cell-middle.png"
	stretch		= TRUE
    }
    image
    {
	function        = FLAT_BOX
	state           = SELECTED
	detail		= "cell_odd_end"
	border          = { 0, 2, 2, 2 }
	file            = "List/cell-end.png"
	stretch		= TRUE
    }
    }   
}
class "GtkTreeView*" style "gtktreeview"

########### panel arrow fix ############################

style "panel-arrow"
{
 engine "pixmap"
  {
# TOP PANEL
   image
   {
     function 		= ARROW
     recolorable 	= TRUE
     overlay_file 	= "Arrows/transparent.png"
     overlay_border 	= { 2, 2, 2, 2 }
     overlay_stretch 	= FALSE
     arrow_direction 	= DOWN
   }
# BOTTOM PANEL
   image
   {
     function 		= ARROW
     recolorable 	= TRUE
     overlay_file 	= "Arrows/transparent.png"
     overlay_border 	= { 2, 2, 2, 2 }
     overlay_stretch 	= FALSE
     arrow_direction 	= UP
   }
   image
   {
     function 		= ARROW
     recolorable 	= TRUE
     overlay_file 	= "Arrows/panel-arrow-left.png"
     overlay_border 	= { 0, 0, 0, 0 }
     overlay_stretch 	= FALSE
     arrow_direction 	= LEFT
   }
   image
   {
     function 		= ARROW
     recolorable 	= TRUE
     overlay_file 	= "Arrows/panel-arrow-right.png"
     overlay_border 	= { 0, 0, 0, 0 }
     overlay_stretch 	= FALSE
     arrow_direction 	= RIGHT
   }
  }
}
class "*Panel*" style "panel-arrow" # for panel applets
widget_class "*Panel*.*Button*.*Arrow*" style "panel-arrow"

################### TOOLBAR ###########################

style "toolbar"
{
  xthickness = 4
  ythickness = 4
   engine "pixmap"
   {
	image
	{
		function 	= BOX
		file	 	= "Toolbar/toolbar.png"
		border	 	= { 1, 1, 1, 2 }
		stretch	 	= TRUE
    	}
    	image
    	{
      	  	function	= HANDLE
      		recolorable	= TRUE
      		file		= "Others/divider-h.png"
      		border		= { 1, 1, 1, 1 }
      		stretch 	= TRUE
      		overlay_file	= "Handles/handle-h.png"
      		overlay_stretch	= FALSE
      		orientation	= HORIZONTAL
    	}
    	image
    	{
      		function	= HANDLE
      		recolorable	= TRUE
      		file		= "Others/divider-v.png"
      		border		= { 1, 1, 1, 1 }
      		stretch 	= TRUE
      		overlay_file	= "Handles/handle-v.png"
      		overlay_stretch	= FALSE
      		orientation	= VERTICAL
        }
    	image
    	{
      		function	= ARROW
      		state		= ACTIVE
      		recolorable	= TRUE
      		overlay_file	= "Arrows/arrow-down.png"
      		overlay_border	= { 0, 0, 0, 0 }
      		overlay_stretch	= FALSE
      		arrow_direction	= DOWN
    	}
   }
}
class 		"GtkToolbar"       	style "toolbar" # was flat style
class 		"*HandleBox" 		style "toolbar"
class 		"*Toolbar" 		style "toolbar"
widget_class 	"*Nautilus*ToolBar*"	style "toolbar"
widget_class 	"*BonoboDockItem" 	style "toolbar"
widget_class 	"*Toolbar" 		style "toolbar"

##################### TOOLBAR BUTTONS ###############################

style "toolbuttons" = "default"
{
  xthickness = 2
  ythickness = 2  
  fg[ACTIVE] =  @base_color
  fg[PRELIGHT] =  @base_color    
	engine "pixmap" 
	{      
		image
		{
			function        = BOX
			recolorable     = TRUE
			state		= NORMAL
			file            = "Toolbar/toolbutton-normal.png"
			border          = { 2, 2, 2, 2 }
			stretch         = TRUE
		}
		image
		{
			function        = BOX
			recolorable     = TRUE
			state		= PRELIGHT
			file            = "Toolbar/toolbutton-prelight.png"
			border          = { 2, 2, 2, 2 }
			stretch         = TRUE
		}
		image
		{
			function        = BOX
			recolorable     = TRUE
			state		= ACTIVE
			file            = "Toolbar/toolbutton-active.png"
			border          = { 2, 2, 2, 2 }
			stretch         = TRUE
		}  
		image
		{
			function        = BOX
			recolorable     = TRUE
			state		= INSENSITIVE
			file            = "Toolbar/toolbutton-insensitive.png"
			border          = { 2, 2, 2, 2 }
			stretch         = TRUE
		}  
	}
}
widget_class "*Tool*GtkButton" style "toolbuttons"
class "GtkToggleButton" style "button"
widget_class "*Tool*GtkToggleButton" style "toolbuttons"

################## tooltips #######################

style "tooltips" #= "theme-default"
{
  xthickness = 6
  ythickness = 4

  bg[NORMAL]        =  @tooltip_bg_color # "#DCDCA0" # "black" #added ::background
#  text[SELECTED]    =  @base_color #added ::top-left background color (aurora)
  fg[NORMAL]        =  @tooltip_fg_color # "white" #added ::text color
#  text[NORMAL]      =  shade (0.98, @bg_color) #added ::tooltip border (aurora)
}
widget "gtk-tooltips*"  style "tooltips"
widget "gtk-tooltip*"  style "tooltips"

################## frame-fix-image #######################

#style "frame" = "theme-default"
#{
#  xthickness = 6
#  ythickness = 6
#}
#widget_class ".<GtkFrame>" style "frame"

##########################################################

style "list-item-set-image"
{
  fg[PRELIGHT] = @bg_color      
  engine "pixmap"
  {
    image
    {
        function      = FLAT_BOX
        state         = SELECTED
        file          = "List/item-selected.png"
        border        = { 2, 2, 2, 2 }               
     }
    image
    {
        function      = FLAT_BOX
        state         = NORMAL
        file          = "List/item-normal.png"
        border        = { 1, 1, 1, 1 }               
     }
  }                            
}
widget_class "*<GtkListItem>*" style "list-item-set-image"

##########################################################

style "scrolledwindow" = "theme-default"
{        
    engine "pixmap"
    {    	 
	  image
          {
                function = SHADOW
		state 	= INSENSITIVE
                file 	= "Shadows/shadow-in.png"
                border 	= { 1, 1, 1, 1 }
                detail 	= "scrolled_window"
          }
          image
          {
                function = SHADOW
                file 	="Shadows/shadow-in.png"
                border 	= { 1, 1, 1, 1 }
                detail 	= "scrolled_window"
          }
    }    
}
 
class "GtkScrolledWindow" style "scrolledwindow"

###############################################

style "tree-column-line-separator"
{
  xthickness = 1
  ythickness = 2
	
  engine "pixmap"
  {
    image
    {
      function	  = VLINE
      recolorable = TRUE
      file	  = "Lines/line-v.png"
      border	  = { 1, 1, 1, 1 }
      stretch	  = TRUE
    }
  }
}

################################################################################
############## tiled image as background #################

style "window-background" = "default"
{
  engine "pixmap"
  {
   image
    {
      function = FLAT_BOX
      file 	= "Buttons/button-overlay.png"
      stretch 	= FALSE
      border 	= { 1, 0, 1, 0 }
   }
  }
}
#class "GtkWindow"      style "window-background" # uncomment others class
widget "PanelDItemEditor" style "window-background"

#########################################

################################################
# END


