" Copyright Â© 2013 Edward O'Callaghan. All Rights Reserved.
"
" File: ~/.vimrc.local
" Author: Edward O'Callaghan
" Description::
" Last Modified: April 14, 2013"
" ---------------------------------------------------------

" Misc
" ---------------------------------------------------------
let $PATH = $PATH . ':' . expand("~/.cabal/bin")
" ---------------------------------------------------------"

" Snips
" ---------------------------------------------------------
let g:snips_author = "Edward O'Callaghan"
" ---------------------------------------------------------"

" AuthorInfo
" ---------------------------------------------------------
let g:vimrc_author="Edward O'Callaghan"
let g:vimrc_email='victoredwardocallaghan@gmail.com'
let g:vimrc_homepage='http://www.github.com/victoredwardocallaghan'

nmap <F4> :AuthorInfoDetect<cr>
" ---------------------------------------------------------"

" ViM Colours
" ---------------------------------------------------------
set t_Co=256
"let g:jellybeans_use_lowcolor_black = 0
"colorscheme jellybeans
colorscheme xoria256
"colorscheme phd
"colorscheme candycode
"colorscheme wombat256mod
"colorscheme molokai
" ---------------------------------------------------------"

" Enable omni completion
" ---------------------------------------------------------
setlocal omnifunc=necoghc#omnifunc
autocmd FileType haskell setlocal omnifunc=necoghc#omnifunc
let g:necoghc_enable_detailed_browse = 1
" ---------------------------------------------------------"

" Hotkey
" ---------------------------------------------------------
set pastetoggle=<F2> " F2 toggles paste mode
nmap <F8> :TagbarToggle<CR>
" ---------------------------------------------------------"

" LaTeX Live Preview
" ---------------------------------------------------------
autocmd FileType tex silent :! (file="%"; pdflatex % &>/dev/null && mupdf "${file/.tex/.pdf}" &>/dev/null) &
command! Reload :! (pdflatex % &>/dev/null) &
au BufWritePost *.tex silent Reload "
let tex_preview_always_autosave = 0
" LaTeX
autocmd Filetype tex,latex let g:tex_flavor = "latex"
autocmd Filetype tex,latex setlocal spell
autocmd Filetype tex,latex set grepprg=grep\ -nH\ $
" ---------------------------------------------------------"

" PKGBUILD stuff
" ---------------------------------------------------------
autocmd FileType PKGBUILD set expandtab shiftwidth=2 softtabstop=4
" ---------------------------------------------------------"

" SH stuff
" ---------------------------------------------------------
autocmd FileType sh set expandtab shiftwidth=2 softtabstop=4
" ---------------------------------------------------------"

" Text stuff
" ---------------------------------------------------------
autocmd BufNewFile,BufRead *.txt set filetype=pandoc
let g:pandoc_use_hard_wraps = 1
let g:pandoc_auto_format = 1
" ---------------------------------------------------------"

" Latex Box Plugin
" ---------------------------------------------------------
let g:LatexBox_latexmk_options="-pdf"
let g:LatexBox_output_type="pdf"
let g:LatexBox_viewer = 'mupdf'
let g:LatexBox_latexmk_options = '-pv'
" ---------------------------------------------------------"

" C# stuff
" ---------------------------------------------------------
"let current_compiler = "mcs"
let g:easytags_cmd = '/usr/bin/ctags'
let g:easytags_dynamic_files = 1
set tags=./tags;
" ---------------------------------------------------------"

" ViM.Gist
" ---------------------------------------------------------
let g:gist_detect_filetype = 1
let g:gist_post_private = 1
let g:gist_clip_command = 'xclip -selection clipboard'
let g:gist_browser_command = 'dwb -x O %URL%'
let g:gist_open_browser_after_post = 1
" ---------------------------------------------------------"

" Haskell stuff
" ---------------------------------------------------------
autocmd FileType haskell set ai sw=4 ts=4 sta et fo=croql
au BufEnter *.hs compiler ghc
map <LocalLeader>r :GHCi

let g:haddock_browser = "/usr/bin/dwb -x O "
let g:ghc = "/usr/bin/ghc"

au BufNewFile,BufRead *.hs map <buffer> <F1> :Hoogle
au BufNewFile,BufRead *.hs map <buffer> <C-F1> :HoogleClose<CR>
au BufNewFile,BufRead *.hs map <buffer> <S-F1> :HoogleLine<CR>
" ---------------------------------------------------------"
